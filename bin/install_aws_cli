#!/usr/bin/env bash

echo "Running install aws script..."

cd /workspace

# Clean up previous installations
rm -f '/workspace/awscliv2.zip'
rm -rf '/workspace/aws'

# Download and Install AWS CLI
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

# Confirm installation
aws sts get-caller-identity


# Create or update AWS credentials file
mkdir -p ~/.aws

{
  echo "[default]"
  echo "aws_access_key_id = $AWS_ACCESS_KEY_ID"
  echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY"
} > ~/.aws/credentials

# Create or update AWS config file
{
  echo "[default]"
  echo "region = $AWS_DEFAULT_REGION"
  echo "output = $AWS_DEFAULT_OUTPUT"
} > ~/.aws/config

aws configure list


cd $PROJECT_ROOT

# Check AWS CLI version
aws --version

# Import the public key to AWS as a key pair for manual EC2 instances
echo "Importing SSH public key to AWS..."
aws ec2 import-key-pair --key-name "gitpod_ec2_key" --public-key-material fileb://~/.ssh/gitpod_ec2_key.pub

echo "Usage for ssh connection:ssh -i ~/.ssh/gitpod_ec2_key ubuntu@<Public-IP>"

# For every deletion of gitpod workspace. Delete the gitpod_ec2_key 
# from AWS and Recreate the instance. Otherwise, back up all newly created key-pairs for
# continued access to the ec2 instance

# Create the workspace before you create the EC2 instance to allow time for the keypair to reflect
#on the console

########## Create BAckup by using EC2 instance connect ###############
# Connect EC2 via instance connect on the console.
# Manually add the public key to the authorized_keys file for persistence 


########## Create Backup by saving content of gitpod_ec2_key and gitpod_ec2_key.pub ###############
# Save content in a text file on local system
# Once gitpod restarts, wipe out the content of both files and replace with your previously saved keys.
# This ensures continued access to the instance

