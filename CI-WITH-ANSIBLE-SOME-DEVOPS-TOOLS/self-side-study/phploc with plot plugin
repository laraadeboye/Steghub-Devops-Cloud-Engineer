Data Visualization Examples from phploc Metrics:

You can generate multiple interesting graphs based on the phploc data:
Code Complexity Graphs:

Cyclomatic Complexity / Lines of Code
Cyclomatic Complexity / Number of Classes
Cyclomatic Complexity / Number of Methods

Code Structure Graphs:

Number of Directories
Number of Files
Lines of Code (LOC)
Logical Lines of Code (LLOC)
Number of Classes
Number of Methods
Number of Functions

Code Quality Graphs:

Comment Lines of Code (CLOC)
Non-Comment Lines of Code (NCLOC)
Public vs Non-Public Methods
Static vs Non-Static Methods


Here is a sample jenkinsfile with a summarised phploc metric


```
pipeline {
    agent any
    stages {
        stage('Initial Cleanup') {
            steps {
                dir("${WORKSPACE}") {
                    deleteDir()
                }
            }
        }
        stage('Checkout SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/laraadeboye/php-todo-app.git'
            }
        }
        stage('Prepare Dependencies') {
            steps {
                script {
                    // Move .env.sample to .env and set environment variables
                    sh '''
                        mv .env.sample .env
                        echo "DB_HOST=${DB_HOST}" >> .env
                        echo "DB_PORT=${DB_PORT}" >> .env
                        echo "DB_DATABASE=${DB_DATABASE}" >> .env
                        echo "DB_USERNAME=${DB_USERNAME}" >> .env
                        echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
                        echo "APP_ENV=${APP_ENV}" >> .env
                        echo "APP_DEBUG=${APP_DEBUG}" >> .env
                        echo "LOG_LEVEL=${LOG_LEVEL}" >> .env
                        echo "APP_KEY=${APP_KEY}" >> .env
                        echo "APP_URL=${APP_URL}" >> .env
                        echo "CACHE_DRIVER=${CACHE_DRIVER}" >> .env
                        echo "SESSION_DRIVER=${SESSION_DRIVER}" >> .env
                        echo "QUEUE_DRIVER=${QUEUE_DRIVER}" >> .env
                    '''
                    
                    // Create storage and bootstrap directories with appropriate permissions
                    sh '''
                        mkdir -p bootstrap/cache
                        mkdir -p storage/framework/sessions
                        mkdir -p storage/framework/views
                        mkdir -p storage/framework/cache                        
                        chown -R jenkins:jenkins bootstrap storage 
                        chmod -R 775 bootstrap storage 
                    '''

                    // Install Composer dependencies with error handling
                    sh '''
                        set -e                        
                        composer install 
                    '''                                    
                    
                    // Run Laravel artisan commands
                    sh '''                 
                        php artisan migrate --force
                        php artisan db:seed --force
                    '''
                }
            }
        }
        stage('Execute Unit Tests') {
            steps {
                sh './vendor/bin/phpunit'                
            }
        } 
        stage('Code Analysis') {
            steps {
                sh 'phploc app/ --log-csv build/logs/phploc.csv'                
            }
        }
        stage('Code Analysis Metrics') {
            steps {
                script {
                    // Plot Lines of Code Metrics
                    plot csvFileName: 'phploc.csv',
                         group: 'Code Metrics',
                         title: 'Lines of Code Metrics',
                         style: 'line',
                         yaxis: 'Count',
                         csvSeries: [
                             [
                                 file: 'build/logs/phploc.csv',
                                 inclusionFlag: 'INCLUDE_BY_STRING',
                                 exclusionValues: 'Cyclomatic Complexity, Classes, Methods, Functions',
                                 displayTableFlag: false
                             ]
                         ]
                    
                    // Plot Code Complexity
                    plot csvFileName: 'phploc.csv',
                         group: 'Code Metrics',
                         title: 'Cyclomatic Complexity',
                         style: 'line',
                         yaxis: 'Complexity',
                         csvSeries: [
                             [
                                 file: 'build/logs/phploc.csv',
                                 inclusionFlag: 'INCLUDE_BY_STRING',
                                 exclusionValues: 'Lines of Code, Classes, Methods, Functions',
                                 displayTableFlag: false
                             ]
                         ]
                    
                    // Plot Code Composition
                    plot csvFileName: 'phploc.csv',
                         group: 'Code Metrics',
                         title: 'Code Composition (Classes, Traits, Interfaces)',
                         style: 'line',
                         yaxis: 'Count',
                         csvSeries: [
                             [
                                 file: 'build/logs/phploc.csv',
                                 inclusionFlag: 'INCLUDE_BY_STRING',
                                 exclusionValues: 'Lines of Code, Cyclomatic Complexity, Methods, Functions',
                                 displayTableFlag: false
                             ]
                         ]
                }
            }
        }
    }
}
```
